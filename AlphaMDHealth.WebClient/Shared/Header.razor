@using Radzen.Blazor
@using Radzen;

@namespace AlphaMDHealth.WebClient

<RadzenRow AlignItems=@AlignItems.Center 
            JustifyContent=@JustifyContent.Start
            class="p-2 px-4" Style="height:80px">
    <RadzenColumn Size="3">
        <RadzenStack Orientation="Orientation.Horizontal" 
            AlignItems="AlignItems.Center">
            <span class="amh-nav-icon me-4">
                @{
                    var logo = LibSettings.GetSettingValueByKey(AppState.MasterData.Settings, SettingsConstants.S_LOGO_KEY);
                    <AmhImageControl FieldType=@FieldTypes.ImageControl
                        Icon=@ImageConstants.I_DEFAULT_APP_LOGO_SVG
                        Value=@logo
                        ImageHeight=@AppImageSize.ImageSizeS
                        OnValueChanged=@(async () => { await NavigateView(LocalStorage.IsUserAuthenticated ? AppPermissions.DashboardView : AppPermissions.LandingView); })>
                    </AmhImageControl>
                }
            </span>
            @if (IsAfterLoginLayout)
            {
                <RadzenSidebarToggle Click=@OnSidebarToggleClicked  >
                    <AmhImageControl FieldType=@FieldTypes.ImageControl
                        Icon=@ImageConstants.I_DEFAULT_APP_LOGO_SVG
                        Value="Hamburger.svg"
                        ImageHeight=@AppImageSize.ImageSizeS>
                    </AmhImageControl>
                </RadzenSidebarToggle>
            }
        </RadzenStack>
    </RadzenColumn>
    <RadzenColumn Size="9">
        <RadzenStack Orientation="Orientation.Horizontal"
                        AlignItems="AlignItems.Center"
                        JustifyContent="JustifyContent.SpaceBetween">
            <RadzenRow AlignItems=@AlignItems.Center Style="width:100%;"
            JustifyContent=@JustifyContent.SpaceBetween>
                    <RadzenColumn>
                        @if (AppState.MasterData?.Menus?.Count > 0)
                            {
                                var headerMenus = AppState.MasterData?.Menus?.Where(x => x.MenuLocation == MenuLocation.Header).ToList();
                                @if (headerMenus?.Count > 0)
                                {
                                    <RadzenMenu id="headerMenu" Responsive=@true >
                                        @foreach (var menu in headerMenus)
                                        {    
                                            <NavigationComponent IsFirstRender="false" />
                                            var groupMenus = AppState.MasterData?.MenuGroups?.Where(x => x.MenuGroupID == menu.TargetID && x.MenuLocation == MenuLocation.Header)?.ToList();
                                            @if(groupMenus?.Count > 0)
                                            {
                                                <RadzenMenuItem id=@menu.MenuID 
                                                Value=@menu 
                                                Click=@OnParentClicked 
                                                Text=@menu.PageHeading 
                                                Icon=@menu.GroupIcon >
                                                    @if (groupMenus?.Count > 0)
                                                    {
                                                        @foreach (var menuGroup in groupMenus)
                                                        {
                                                            <RadzenMenuItem Click=@OnChildClicked
                                                                            Text=@menuGroup.PageHeading
                                                                            Path="menu"
                                                                            Value=@menu
                                                                            Icon=@menuGroup.GroupIcon
                                                                            ShowArrow="false"/>
                                                        }
                                                    }
                                            </RadzenMenuItem>
                                            }
                                            else
                                            {
                                            <RadzenMenuItem id=@menu.MenuID 
                                                Value=@menu 
                                                Style="font-size:14px;"
                                                Click=@OnParentClicked 
                                                Text=@menu.PageHeading 
                                                Icon=@menu.GroupIcon >
                                            </RadzenMenuItem>
                                            }
                            
                                        }
                                    </RadzenMenu>
                                }
                            }
                    </RadzenColumn>
                    <RadzenColumn>
                        <RadzenStack  Orientation="Orientation.Horizontal"
                        AlignItems="AlignItems.Center"
                        JustifyContent="JustifyContent.End">
                            <AmhDropdownControl @bind-Value=@selectedLanguage
                                FieldType=@FieldTypes.SingleSelectDropdownControl
                                ResourceKey=@ResourceConstants.R_SELECT_SINGLE_LANGUAGE_KEY
                                Options=@GetLanguageOptions()
                                OnValueChanged=@OnLanguageChangeAsync
                                ShowHeader="false" />
                            @if (IsAfterLoginLayout)
                            {
                                <div style="border-left:1px solid #dedede; padding:20px 0px"></div>
                                <AmhImageControl FieldType=@FieldTypes.CircleWithBorderAndBackgroundImageControl
                                                    ImageHeight=@AppImageSize.ImageSizeM
                                                    ImageWidth=@AppImageSize.ImageSizeM
                                                    Value=@(string.IsNullOrWhiteSpace(AppState.MasterData?.Users?[0].ImageName)
                                                        ? AppState.GetImageInitials(AppState.MasterData?.Users?[0].FirstName + " " + AppState.MasterData?.Users?[0].LastName)
                                                        : AppState.MasterData?.Users?[0].ImageName)
                                                    OnValueChanged=@(async () => { await NavigateView(AppPermissions.ProfileView); })>
                                </AmhImageControl>
                                @AppState.MasterData?.Users?[0].FirstName                             
                                <a href="" @onclick=@(async () => { await NavigateView(AppPermissions.Logout); })>
                                    <?xml version="1.0" standalone="no" ?>
                                    <svg id="MasterPageLogout" style="-webkit-filter: invert(100%) !important; filter: invert(100%) !important;" class="cursor-pointer" width="20px" height="20px" viewBox="0 0 20 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                        <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                            <g id="Logout-new" fill="var(--primary-app-color)" fill-rule="nonzero">
                                                <path d="M10.6666667,14.1904762 C10.8571429,14.3571429 11.0714286,14.4285714 11.2857143,14.4285714 C11.547619,14.4285714 11.8095238,14.3095238 12,14.0952381 L15,10.6190476 C15.3095238,10.2619048 15.3095238,9.73809524 15,9.38095238 L12,5.9047619 C11.6666667,5.5 11.047619,5.45238095 10.6666667,5.80952381 C10.2619048,6.14285714 10.2142857,6.76190476 10.5714286,7.14285714 L12.2142857,9.04761905 L6.19047619,9.04761905 C5.66666667,9.04761905 5.23809524,9.47619048 5.23809524,10 C5.23809524,10.5238095 5.66666667,10.952381 6.19047619,10.952381 L12.2142857,10.952381 L10.5714286,12.8571429 C10.2142857,13.2619048 10.2619048,13.8571429 10.6666667,14.1904762 Z" id="Path"></path>
                                                <path d="M17.5952381,6.92857143 C17.7857143,7.4047619 18.3571429,7.64285714 18.8333333,7.45238095 C19.3095238,7.26190476 19.547619,6.69047619 19.3571429,6.21428571 C17.8095238,2.42857143 14.1666667,0 10.0952381,0 C4.57142857,0 0.0952380952,4.47619048 0.0952380952,10 C0.0952380952,15.5238095 4.57142857,20 10.0952381,20 C14.1666667,20 17.8095238,17.5714286 19.3571429,13.7857143 C19.547619,13.3095238 19.3333333,12.7380952 18.8333333,12.547619 C18.3571429,12.3571429 17.7857143,12.5714286 17.5952381,13.0714286 C16.3333333,16.1190476 13.4047619,18.0952381 10.0952381,18.0952381 C5.64285714,18.0952381 2,14.452381 2,10 C2,5.54761905 5.64285714,1.9047619 10.0952381,1.9047619 C13.4047619,1.9047619 16.3333333,3.88095238 17.5952381,6.92857143 Z" id="Path"></path>
                                            </g>
                                        </g>
                                    </svg>
                                </a>
                            }
                            else if (AppState.RouterData.SelectedRoute.Page != AppPermissions.LoginView.ToString() && LibPermissions.HasActivePermission(AppState.MasterData.OrganisationFeatures, AppPermissions.LoginView.ToString()))
                            {
                                <AmhButtonControl FieldType=@FieldTypes.PrimaryBorderTransparentExButtonControl
                                                    ResourceKey=@AppPermissions.LoginView.ToString()
                                                    Value=@LibPermissions.GetFeatureText(AppState.MasterData.OrganisationFeatures, AppPermissions.LoginView.ToString())
                                                    OnValueChanged=@(async () => { await NavigateView(AppPermissions.LoginView); }) />
                            }
                        </RadzenStack>
                    </RadzenColumn>
            </RadzenRow>
            

            
        </RadzenStack>
    </RadzenColumn>
</RadzenRow>